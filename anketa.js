import bot from "./app.js";
import { sendToRawContact, sendToRawContactBlunder, sendToRawContacRequest, sendToRawStatusReserve, sendToRawStatusDone } from './writegoog.js'
import { sendNewRowsToTelegram } from './crawler.js';
import { getSpreadsheetData, searchForNew } from "./filedata.js";
import { dataBot } from './values.js';

let customerPhone;
let customerName;
let customerInfo = {};
let message; 


const spreadsheetId = dataBot.googleSheetId;
const phoneRegex = /^\d{10,12}$/;

const phrases = {
  greetings: '–í—ñ—Ç–∞—î–º–æ ! –¶–µ —á–∞—Ç-–±–æ—Ç –∫–æ–º–ø–∞–Ω—ñ—ó "AutoCar - –ê–≤—Ç–æ –∑—ñ –°–®–ê" üá∫üá∏',
  contactRequest: '–ù–∞–º –ø–æ—Ç—Ä—ñ–±–Ω—ñ –≤–∞—à—ñ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ñ –¥–∞–Ω—ñ. –û—Ç—Ä–∏–º–∞—Ç–∏ –∑ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∏—Ö –¥–∞–Ω–∏—Ö —Ç–µ–ª–µ–≥—Ä–∞–º?',
  dataConfirmation: `–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: ${customerPhone}. –í–∞—à–µ —ñ–º—è ${customerName}. –î–∞–Ω—ñ –≤—ñ—Ä–Ω—ñ?`,
  thanksForOrder: `–í–∞—à—ñ –¥–∞–Ω—ñ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω—ñ. –î—è–∫—É—î–º–æ ${customerName} –∑–∞ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è. –ú–µ–Ω–µ–¥–∂–µ—Ä –∑–≤ º—è–∂–µ—Ç—å—Å—è –∑ –í–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.`,
  wrongName: '–ù–µ–≤—ñ—Ä–Ω–µ —ñ–º\'—è. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —Å–≤–æ—î —Å–ø—Ä–∞–≤–∂–Ω—î —ñ–º\'—è:',
  wrongPhone: '–ù–µ–≤—ñ—Ä–Ω–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É —â–µ —Ä–∞–∑:',
  phoneRules: '–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –±–µ–∑ +. –õ–∏—à–µ —Ü–∏—Ñ—Ä–∏. –Ü –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è',
  nameRequest: '–í–≤–µ–¥—ñ—Ç—å —Å–≤–æ—î —ñ–º\'—è:',
  phoneRequest: '–í–≤–µ–¥—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –±–µ–∑ "+380"' 
};

const keyboards = {
  startingKeyboard: [['üöô –ü—ñ–¥—ñ–±—Ä–∞—Ç–∏ –∞–≤—Ç–æ', 'üöó –ü—Ä–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ –∞–≤—Ç–æ', 'üìû –ó–≤ º—è–∂—ñ—Ç—å—Å—è –∑—ñ –º–Ω–æ—é']],
  contactRequest: [
    [ { text: '–¢–∞–∫', request_contact: true, } ],
    ['–ù—ñ, —è –≤–≤–µ–¥—É –Ω–æ–º–µ—Ä –≤—Ä—É—á–Ω—É'],
    ['/start'],
  ],
  dataConfirmation: [
    ['–¢–∞–∫, –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∑–∞—è–≤–∫—É'],
    ['–ù—ñ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏ –≤–≤–µ–¥–µ–Ω–Ω—è'],
    ['/start'],
  ],
  enterPhone: [ ['/start'] ],
  surveyQuestion1: [['üí∞7000$ - 10000$', 'üí∞10000$ - 15000$'], 
  ['üí∞15000$ - 20000$', 'üí∞+20000$']
],
  surveyQuestion2: [['üìÖ2005-2010', 'üìÖ2010-2015'],
  ['üìÖ2015-2020', 'üìÖ2020-2023']],
  phoneRequest: [['–í–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä']]
}
const mainMenu = [
  ['üöô –ü—ñ–¥—ñ–±—Ä–∞—Ç–∏ –∞–≤—Ç–æ', 'üöó –ü—Ä–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ –∞–≤—Ç–æ', 'üìû –ó–≤ º—è–∂—ñ—Ç—å—Å—è –∑—ñ –º–Ω–æ—é'],
];

function isValidPhoneNumber(phone) {
  // –£–¥–∞–ª—è–µ–º –≤—Å–µ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã –∏–∑ –Ω–æ–º–µ—Ä–∞
  const cleanPhoneNumber = phone.replace(/\D/g, '');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–æ–º–µ—Ä —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–æ–≤–Ω–æ 10 —Ü–∏—Ñ—Ä
  return /^[0-9]{10}$/.test(cleanPhoneNumber);
}

export const anketaListiner = async() => {
    let selectedOrderRaw;
  
    bot.onText(/\/start/ , (msg) => {
      customerPhone = undefined;
      customerName = undefined;
   
      let userNickname = ''; // –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –Ω–∏–∫–Ω–µ–π–º –ø—É—Å—Ç–æ–π
  
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–∏–∫–Ω–µ–π–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (msg.from.username) {
          userNickname = msg.from.username;
      } else {
          userNickname = ''; // –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –Ω–∏–∫–Ω–µ–π–º–∞
      }
  
      // –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å userNickname –≤ —Ç–µ–∫—Å—Ç–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
      const greetingMessage = `–í—ñ—Ç–∞—î–º–æ! –¶–µ —á–∞—Ç-–±–æ—Ç –∫–æ–º–ø–∞–Ω—ñ—ó "AutoCar - –ê–≤—Ç–æ –∑—ñ –°–®–ê" üá∫üá∏`; //–í—ñ—Ç–∞—î–º–æ, ${userNickname}
  
      bot.sendMessage(msg.chat.id, greetingMessage, {
          reply_markup: {
              keyboard: keyboards.startingKeyboard,
              resize_keyboard: true,
              one_time_keyboard: true
          }
      });
  });
  
    //'–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ –ø—Ä–æ —Ü–µ –∞–≤—Ç–æ' button handler
    bot.on("callback_query", async (query) => {
      selectedOrderRaw = query.data;
      const chatId = query.message.chat.id;
      const range = `auto!N${selectedOrderRaw}`;
      const statusNew = await searchForNew(spreadsheetId, range)
      if (statusNew) {
        sendToRawStatusReserve(selectedOrderRaw);
        bot.sendMessage(chatId, phrases.contactRequest, { reply_markup: { keyboard: keyboards.contactRequest, resize_keyboard: true } });
      } else bot.sendMessage(chatId, '—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥ —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
    })
    bot.on('message', async (msg) => {
      console.log(customerInfo);
      const chatId = msg.chat.id;
      if (msg.text === 'üöô –ü—ñ–¥—ñ–±—Ä–∞—Ç–∏ –∞–≤—Ç–æ') await sendNewRowsToTelegram(spreadsheetId, dataBot.googleSheetName, dataBot.lotStatusColumn, chatId, bot);
      else if (msg.contact) {
        customerInfo[chatId] = { name : msg.contact.first_name, phone : msg.contact.phone_number};
        customerPhone = msg.contact.phone_number;
        customerName = msg.contact.first_name;
        message = customerName + ' ' + customerPhone;
        bot.sendMessage(chatId, `–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: ${msg.contact.phone_number}. –í–∞—à–µ —ñ–º—è ${msg.contact.first_name}. –î–∞–Ω—ñ –≤—ñ—Ä–Ω—ñ?`, 
          {
            reply_markup: {
              keyboard: keyboards.dataConfirmation,
              resize_keyboard: true,
              one_time_keyboard: true
            },
          });
      } else if(msg.text === '–¢–∞–∫, –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∑–∞—è–≤–∫—É') {
          // –ø–µ—Ä–µ–ø–∏—Å–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—ó –∑–∞–ø–∏—Å—É –¥–∞–Ω–∏—Ö –∑–≥—ñ–¥–Ω–æ —Ä—è–¥–∫–∞ –∞ –Ω–µ –∫–æ–ª–æ–Ω–∫–∏
          await bot.sendMessage(dataBot.channelId, message);
          await sendToRawContact(customerInfo[chatId].phone, customerInfo[chatId].name, selectedOrderRaw);
          await sendToRawStatusDone(selectedOrderRaw);
          const range = `auto!A${selectedOrderRaw}:E${selectedOrderRaw}`;
          const data = await getSpreadsheetData(spreadsheetId, range);
          if (data.values && data.values.length > 0) {
          }
          bot.sendMessage(chatId, `–í–∞—à—ñ –¥–∞–Ω—ñ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω—ñ. –î—è–∫—É—î–º–æ ${customerInfo[chatId].name} –∑–∞ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è. –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –∑–≤ º—è–∂–µ—Ç—å—Å—è –∑ –í–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.`);
      } else if (msg.text === '–ü–æ—á–∞—Ç–∏ —Å–ø–æ—á–∞—Ç–∫—É') {
        bot.sendMessage(chatId, '/start');
      } else if(msg.text === `–ù—ñ, —è –≤–≤–µ–¥—É –Ω–æ–º–µ—Ä –≤—Ä—É—á–Ω—É` || msg.text === '–ù—ñ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏ –≤–≤–µ–¥–µ–Ω–Ω—è') {
        customerPhone = undefined;
        customerName = undefined;  
        bot.sendMessage(chatId, phrases.phoneRules, {
          reply_markup: { keyboard: keyboards.enterPhone, resize_keyboard: true },
        });
      } else if (phoneRegex.test(msg.text)) {
        customerInfo[chatId] = { phone : msg.text };
        customerPhone = msg.text;
        bot.sendMessage(chatId, phrases.nameRequest);
      } else if (customerPhone && customerName == undefined ) {
        if (msg.text.length >= 2) {
        customerName = msg.text;
        customerInfo[chatId].name = msg.text;
        bot.sendMessage(chatId, `–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: ${customerInfo[chatId].phone}. –í–∞—à–µ —ñ–º—è ${customerInfo[chatId].name}. –î–∞–Ω—ñ –≤—ñ—Ä–Ω—ñ?` , {
          reply_markup: { keyboard: keyboards.dataConfirmation, resize_keyboard: true, one_time_keyboard: true },
        });
        };
      } else if (msg.text === 'üöó –ü—Ä–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ –∞–≤—Ç–æ') {
        const chatId = msg.chat.id;
      
        // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫ –æ–ø—Ü–∏–π –¥–ª—è surveyQuestion1
        const optionsQuestion1 = keyboards.surveyQuestion1;
      
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –æ–ø—Ü–∏–π
        bot.sendMessage(chatId, '–í —è–∫–∏–π, –ø—Ä–∏–±–ª–∏–∑–Ω–æ, –±—é–¥–∂–µ—Ç –í–∞–º –ø—ñ–¥—ñ–±—Ä–∞—Ç–∏ –∞–≤—Ç–æ–º–æ–±—ñ–ª—å?', {
          reply_markup: { keyboard: optionsQuestion1, one_time_keyboard: true },
        });
      } else if (msg.text === 'üí∞7000$ - 10000$' || msg.text === 'üí∞10000$ - 15000$' || msg.text === 'üí∞15000$ - 20000$' || msg.text === 'üí∞+20000$') {
        // –ó–¥–µ—Å—å optionsQuestion2 —É–∂–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
        const chatId = msg.chat.id;
                // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫ –æ–ø—Ü–∏–π –¥–ª—è surveyQuestion2
                const optionsQuestion2 = keyboards.surveyQuestion2;
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å
        bot.sendMessage(chatId, '–Ø–∫–∏—Ö —Ä–æ–∫—ñ–≤ –∞–≤—Ç–æ –í–∏ —Ä–æ–∑–≥–ª—è–¥–∞—î—Ç–µ?', {
          reply_markup: { keyboard: optionsQuestion2, one_time_keyboard: true },
        });
      } else if (msg.text === 'üìÖ2005-2010' || msg.text === 'üìÖ2010-2015' || msg.text === 'üìÖ2015-2020' || msg.text === 'üìÖ2020-2023') {
        bot.sendMessage(chatId, '–î—è–∫—É—î–º–æ –∑–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ, –¥–∞–Ω—ñ –ø—Ä–∏–π–Ω—è—Ç–æ. –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –∑–≤ º—è–∂–µ—Ç—å—Å—è –∑ –í–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.');
      } 
      else if (msg.text === 'üìû –ó–≤ º—è–∂—ñ—Ç—å—Å—è –∑—ñ –º–Ω–æ—é') {
        bot.sendMessage(chatId, phrases.nameRequest);
    } else if (msg.text && customerName === undefined && msg.text !== '/start' ) {
        const enteredName = msg.text;
        customerName = enteredName;
        console.log(`–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞: ${enteredName}`);
        bot.sendMessage(dataBot.channelId, customerName);
        // bot.sendMessage(chatId, phrases.phoneRequest, { reply_markup: { keyboard: keyboards.phoneRequest, resize_keyboard: true } });

    } 
    // else if (msg.text && customerName && customerPhone === undefined) {
  //     bot.sendMessage(chatId, phrases.phoneRequest, { reply_markup: { keyboard: keyboards.phoneRequest, resize_keyboard: true } });
  // }
  
    
   
  });
};
  